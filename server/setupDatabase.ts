
import { Client } from 'pg';

async function setupDatabase() {
  const databaseUrl = process.env.DATABASE_URL;
  
  if (!databaseUrl) {
    console.error('DATABASE_URL environment variable is not set');
    process.exit(1);
  }

  const client = new Client({ connectionString: databaseUrl });

  try {
    await client.connect();
    console.log('Connected to PostgreSQL database');

    // Create the products table
    await client.query(`
      CREATE TABLE IF NOT EXISTS public.products (
          id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
          created_at timestamp with time zone DEFAULT now() NOT NULL,
          name text NOT NULL,
          category text,
          price numeric,
          description text,
          benefits text,
          usage text,
          ingredients text,
          imageUrl text
      );
    `);
    console.log('✓ Products table created/verified');

    // Create the articles table
    await client.query(`
      CREATE TABLE IF NOT EXISTS public.articles (
          id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
          created_at timestamp with time zone DEFAULT now() NOT NULL,
          title text NOT NULL,
          category text,
          content text,
          date timestamp with time zone,
          imageUrl text
      );
    `);
    console.log('✓ Articles table created/verified');

    // Add comments to describe the tables
    await client.query(`
      COMMENT ON TABLE public.products IS 'Stores all product information';
    `);
    
    await client.query(`
      COMMENT ON TABLE public.articles IS 'Stores all blog articles';
    `);
    console.log('✓ Table comments added');

    console.log('Database setup completed successfully!');
  } catch (error) {
    console.error('Error setting up database:', error);
    process.exit(1);
  } finally {
    await client.end();
  }
}

// Run if called directly
if (import.meta.url === `file://${process.argv[1]}`) {
  setupDatabase().then(() => {
    console.log('Database setup script completed');
    process.exit(0);
  });
}

export { setupDatabase };
